{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dmitry\\\\weather\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\nconst API_KEY = \"8d3175756da088dceec27c2e49462696\";\n\nclass App extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-5 info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Info, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-7 form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Form, {\n      weatherMethod: this.gettingWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temp: this.state.temp,\n      city: this.state.city,\n      country: this.state.country,\n      pressure: this.state.pressure,\n      humidity: this.state.humidity,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))))));\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      pressure: undefined,\n      humidity: undefined,\n      error: undefined\n    };\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      var city = e.target.elements.city.value;\n\n      if (city) {\n        const api_url = await fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n        const data = await api_url.json();\n        console.log(data);\n        this.setState({\n          temp: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          pressure: data.main.pressure,\n          humidity: data.main.humidity,\n          error: undefined\n        });\n      } else {\n        this.setState({\n          temp: undefined,\n          city: undefined,\n          country: undefined,\n          pressure: undefined,\n          humidity: undefined,\n          error: \"Введите название города\"\n        });\n      }\n    };\n\n    this.state = {\n      weatherData: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({\n        weatherData: json\n      });\n    });\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Loading\");\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, weather.main, \" in \", weatherData.name, React.createElement(\"img\", {\n      src: iconUrl,\n      alt: weatherData.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Dmitry\\weather\\src\\App.js"],"names":["React","Info","Form","Weather","API_KEY","App","Component","render","gettingWeather","state","temp","city","country","pressure","humidity","error","constructor","undefined","e","preventDefault","target","elements","value","api_url","fetch","data","json","console","log","setState","main","name","sys","weatherData","componentDidMount","URL","then","res","weather","iconUrl","icon","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\n\nconst API_KEY = \"8d3175756da088dceec27c2e49462696\"\n\nclass App extends React.Component {\n  state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      pressure: undefined,\n      humidity: undefined,\n      error: undefined\n    }\n\n  gettingWeather = async (e) => {\n    e.preventDefault();\n    var city = e.target.elements.city.value;\n    \n    if(city){\n      const api_url = await   \n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = await api_url.json();\n      console.log(data);\n      \n    this.setState({\n      temp: data.main.temp,\n      city: data.name,\n      country: data.sys.country,\n      pressure: data.main.pressure,\n      humidity: data.main.humidity,\n      error: undefined\n      });\n    } else {\n      this.setState({\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      pressure: undefined,\n      humidity: undefined,\n      error: \"Введите название города\"\n      });\n    }\n  }\n    render() {\n      return(\n          <div className=\"wrapper\">\n          <div className=\"main\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-sm-5 info\">\n              <Info />\n               </div>\n              <div className=\"col-sm-7 form\">\n              <Form weatherMethod={this.gettingWeather}/>\n              <Weather \n              temp={this.state.temp}\n              city={this.state.city}\n              country={this.state.country}\n              pressure={this.state.pressure}\n              humidity={this.state.humidity}\n              error={this.state.error}\n              />\n             \n            </div>\n          </div>\n            </div>\n            </div>\n          </div>\n        );\n      }\n\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null\n    };\n  }\n  componentDidMount() {\n    \n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({ weatherData: json });\n    });\n  }\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return <div>Loading</div>;\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n    return (\n      <div>\n        <h1>\n          {weather.main} in {weatherData.name}\n          <img src={iconUrl} alt={weatherData.description} />\n        </h1>\n        \n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}